#version 460 core
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_ray_query : enable
#extension GL_EXT_ray_tracing : enable

// 
#include "./include/driver.glsl"
#include "./include/constants.glsl"
#include "./include/common.glsl"
#include "./include/framebuffer.glsl"
#include "./include/geometryRegistry.glsl"
#include "./include/instanceLevel.glsl"
#include "./include/material.glsl"
#include "./include/rayTracing.glsl"
#include "./include/external.glsl"

// 
layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;


// 
void main() 
{
    uvec2 launchId = gl_GlobalInvocationID.xy;
    for (uint I=0;I<drawInstances[launchId.y].geometryLevelCount;I+=gl_WorkGroupSize.x) {
        const uint i = I+launchId.x;
        if (i < drawInstances[launchId.y].geometryLevelCount) {
            drawInstances[launchId.y].drawIndirectReference.geometries[i].vertexCount = drawInstances[launchId.y].geometryLevelReference.geometries[i].primitive.count*3u;
            drawInstances[launchId.y].drawIndirectReference.geometries[i].instanceCount = drawInstances[launchId.y].customIndex_instanceCount.y;
            drawInstances[launchId.y].drawIndirectReference.geometries[i].firstVertex = 0u;
            drawInstances[launchId.y].drawIndirectReference.geometries[i].firstInstance = 0u;
        };
    };
};
